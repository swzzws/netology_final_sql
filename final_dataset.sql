drop table if exists Department;
create table Department (id serial Primary key,
name varchar);

insert into Department values
(1, 'Therapy'),
(2, 'Neurology'),
(3, 'Cardiology'),
(4, 'Gastroenterology'),
(5, 'Hematology'),
(6, 'Oncology');

drop table if exists ChiefDoc;
create table ChiefDoc(id serial Primary key,
department_id serial,
Foreign key (department_id) references Department(id),
name varchar);

insert into ChiefDoc values
(1, 1, 'Matt'),
(2, 1, 'Stella'),
(3, 2, 'Boris'),
(4, 2, 'Marina'),
(5, 3, 'Lucy'),
(6, 3, 'Mara'),
(7, 4, 'Marat'),
(8, 5, 'Julia'),
(9, 6, 'Robert');

drop table if exists Employee;
create table Employee (id serial Primary key,
department_id serial,
Foreign key (department_id) references Department(id),
chief_doc_id serial,
Foreign key (chief_doc_id) references ChiefDoc(id),
name varchar,
position varchar,
date_bitrh date,
gender varchar(1));

insert into Employee values
(1, 1, 1, 'Kate', 'doctor', '1985-03-10', 'f'),
(2, 1, 1, 'Lidia', 'nurse', '1971-10-05', 'f'),
(3, 1, 1, 'Alexey', 'vice_chief', '1969-11-25', 'm'),
(4, 1, 2, 'Pier', 'doctor', '1989-11-30', 'm'),
(5, 1, 2, 'Aurel', 'assistant', '1975-01-13', 'f'),
(6, 1, 2, 'Klaudia', 'doctor', '1967-02-22', 'f'),
(7, 2, 3, 'Klaus', 'doctor', '1976-04-04', 'm'),
(8, 2, 3, 'Maria', 'doctor', '1977-12-03', 'f'),
(9, 2, 4, 'Kate', 'nurse', '1993-05-10', 'f'),
(10, 3, 5, 'Peter', 'vice_chief', '1981-09-15', 'm'),
(11, 3, 5, 'Sergey', 'nurse', '1995-08-28', 'm'),
(12, 3, 6, 'Olga', 'doctor', '1982-02-16', 'f'),
(13, 3, 6, 'Maria', 'nurse', '1988-07-18', 'f'),
(14, 3, 6, 'Oleg', 'assistant', '1973-07-07', 'm'),
(15, 4, 7, 'Irina', 'nurse', '1966-10-22', 'f'),
(16, 4, 7, 'Grit', 'doctor', '1979-12-30', 'm'),
(17, 4, 7, 'Vanessa', 'doctor', '1969-08-17', 'f'),
(18, 5, 8, 'Sascha', 'nurse', '1994-11-19', 'f'),
(19, 5, 8, 'Ben', 'doctor', '1991-01-27', 'm'),
(20, 6, 9, 'Jessy', 'vice_chief', '1978-06-25', 'f'),
(21, 6, 9, 'Ann', 'doctor', '1984-06-03', 'f'),
(22, 6, 9, 'Maria', 'nurse', '1987-09-17', 'f'),
(23, 6, 9, 'Maxim', 'doctor', '1964-10-12', 'm'),
(24, 6, 9, 'Lera', 'assistant', '1985-07-23', 'f'),
(25, 5, 8, 'Kris', 'doctor', '1972-03-08', 'm'),
(26, 4, 7, 'Mira', 'doctor', '1980-05-10', 'f'),
(27, 3, 5, 'Irina', 'doctor', '1990-05-12', 'f'),
(28, 2, 3, 'Petr', 'assistant', '1974-06-14', 'm'),
(29, 2, 3, 'Stefa', 'nurse', '1989-04-24', 'f'),
(30, 2, 4, 'Ivan', 'doctor', '1973-05-25', 'm');

drop table if exists Publication;
create table Publication(id serial Primary key,
date_pub date,
num_pages integer);

-- спасибо гуглу за функцию рандомной даты

CREATE OR REPLACE FUNCTION gen_Bdate(min date) RETURNS date AS $$
  SELECT CURRENT_DATE - (random() * (CURRENT_DATE - $1))::int;
$$ LANGUAGE sql STRICT VOLATILE;

--

insert into Publication values 
(1, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(2, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(3, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(4, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(5, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(6, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(7, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(8, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(9, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(10, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(11, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(12, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(13, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(14, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(15, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(16, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(17, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(18, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(19, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(20, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(21, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(22, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(23, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(24, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(25, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(26, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(27, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(28, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(29, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(30, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(31, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(32, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(33, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(34, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(35, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(36, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(37, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(38, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(39, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(40, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(41, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(42, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(43, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(44, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(45, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(46, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(47, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(48, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(49, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(50, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(51, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(52, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(53, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(54, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(55, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(56, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(57, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(58, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(59, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(60, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(61, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(62, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(63, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(64, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(65, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(66, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(67, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer), 
(68, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer),
(69, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer),
(70, gen_date('2010-01-01'), floor(random()*(500-30+1)+30)::integer);

drop table if exists PubAuthor;
create table PubAuthor(id_pub serial,
id_e serial,
Primary key (id_pub, id_e),
Foreign key (id_pub) references Publication(id),
Foreign key (id_e) references Employee(id));

insert into PubAuthor values
(1, 30),
(2, 30),
(3, 30),
(4, 30),
(5, 30),
(6, 1),
(6, 27),
(7, 27),
(8, 3),
(8, 1),
(9, 4),
(10, 26),
(11, 17),
(11, 19),
(12, 19),
(13, 19),
(14, 4),
(15, 25),
(15, 30),
(16, 8),
(17, 23),
(18, 23),
(19, 23),
(20, 23),
(21, 23),
(21, 10),
(21, 1),
(21, 12),
(22, 12),
(23, 23),
(24, 6),
(25, 7),
(26, 7),
(27, 23),
(27, 7),
(28, 16),
(29, 10),
(30, 20),
(31, 21),
(32, 21),
(33, 21),
(33, 27),
(34, 23),
(35, 1),
(36, 17),
(37, 25),
(38, 25),
(38, 23),
(39, 27),
(40, 27),
(41, 8),
(42, 12),
(43, 12),
(44, 12),
(44, 23),
(45, 7),
(46, 21),
(47, 4),
(48, 4),
(49, 10),
(49, 1),
(49, 3),
(50, 10),
(51, 16),
(52, 16),
(53, 25),
(54, 17),
(55, 17),
(55, 1),
(56, 12),
(57, 12),
(58, 8),
(59, 19),
(60, 12),
(61, 16),
(61, 21),
(61, 26),
(62, 26),
(63, 26),
(64, 25),
(65, 25),
(66, 21),
(66, 1),
(66, 12),
(67, 16),
(68, 3),
(69, 7),
(69, 12),
(70, 26),
(70, 10),
(70, 21);

